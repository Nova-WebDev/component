@use "../funxtion/button-function" as abs;
@use "sass:color";


@mixin smart-button($bg-color, $text-color: white) {
  background-color: $bg-color;
  color: $text-color;
  cursor: pointer;
  transition: transform 0.2s ease, background-color 0.3s ease;

  // hover ŸÅŸÇÿ∑ ÿ®ÿ±ÿß€å ÿØÿ≥ÿ™⁄ØÿßŸá‚ÄåŸáÿß€å€å ⁄©Ÿá Ÿæÿ¥ÿ™€åÿ®ÿßŸÜ€å ŸÖ€å‚Äå⁄©ŸÜŸÜ
  @media (hover: hover) {
    &:hover {
      background-color: abs.hover-color($bg-color);
      transform: translateY(-2px);
    }
  }

  &:active {
    background-color: abs.active-color($bg-color);
    transform: translateY(1px);
  }
}

@mixin flashy-button($base-color) {
  $r: color.channel($base-color, "red", $space: rgb);
  $g: color.channel($base-color, "green", $space: rgb);
  $b: color.channel($base-color, "blue", $space: rgb);

  position: relative;
  overflow: hidden;
  transition: all 0.3s;
  border: 2px solid $base-color;
  background: linear-gradient(to right,
      rgba($r, $g, $b, 0.1) 1%,
      transparent 40%,
      transparent 60%,
      rgba($r, $g, $b, 0.1) 100%);
  color: $base-color;

  box-shadow:
    inset 0 0 10px rgba($r, $g, $b, 0.4),
    0 0 9px 3px rgba($r, $g, $b, 0.1);

  @media (hover: hover) {
    &:hover {
      color: $base-color;
      box-shadow:
        inset 0 0 10px rgba($r, $g, $b, 0.6),
        0 0 9px 3px rgba($r, $g, $b, 0.2);
    }

    &:hover::before {
      transform: translateX(15em);
    }
  }

  &::before {
    content: "";
    position: absolute;
    left: -4em;
    width: 4em;
    height: 100%;
    top: 0;
    transition: transform 0.4s ease-in-out;
    background: linear-gradient(to right,
        transparent 1%,
        rgba($r, $g, $b, 0.1) 40%,
        rgba($r, $g, $b, 0.1) 60%,
        transparent 100%);
  }
}

@mixin glow-button($base-color, $text-color) {
  $r: color.channel($base-color, "red", $space: rgb);
  $g: color.channel($base-color, "green", $space: rgb);
  $b: color.channel($base-color, "blue", $space: rgb);

  // ŸÖÿ¥ÿ™ŸÇ‚Äåÿ≥ÿßÿ≤€å ÿ±ŸÜ⁄Ø ÿØÿ±ÿÆÿ¥ÿ¥ ÿßÿ≤ base
  $glow: color.adjust($base-color, $saturation: 20%, $lightness: 20%);

  background-color: transparent;
  color: $text-color;
  border: 1px solid $base-color;
  box-shadow:
    0 0 0px 1px $base-color,
    0 0 10px 2px $glow,
    inset 0 0 0px 1px $base-color,
    inset 0 0 10px 2px $glow;
  text-shadow: 0px 0px 5px $glow;
  transition: box-shadow 100ms, text-shadow 100ms, transform 0.3s ease;
  cursor: pointer;

  @media (hover: hover) {
    &:hover {
      box-shadow:
        0 0 0px 1px $base-color,
        0 0 10px 2px $glow,
        inset 0 0 0px 1px $base-color,
        inset 0 0 30px 2px $glow;
      text-shadow: 0 0 10px $glow;
      transform: translateY(-2px);
    }
  }

  &:active {
    box-shadow:
      0 0 0px 1px $base-color,
      0 0 25px 2px $glow,
      inset 0 0 0px 1px $base-color,
      inset 0 0 30px 2px $glow;
    transform: translateY(1px);
  }
}

@mixin neon-button-star($border-color, $btn-width, $btn-height) {
  $glow-opacity: 0.10; // ÿ≥ÿß€åŸá ÿÆ€åŸÑ€å ŸÖŸÑÿß€åŸÖ
  $circle-blur: calc(#{$btn-height} * 0.66); // blur ŸÜÿ≥ÿ®€å ÿ®ÿß ÿßÿ±ÿ™ŸÅÿßÿπ
  $circle-shadow: 0 0 calc(#{$btn-width} * 0.05) calc(#{$btn-height} * 0.02) rgba(0, 0, 0, 0.1);

  display: flex;
  justify-content: center;
  align-items: center;
  width: $btn-width;
  height: $btn-height;
  overflow: hidden;
  background-size: 300% 300%;
  backdrop-filter: blur(1rem);
  border-radius: 5rem;
  transition: 0.5s ease;
  position: relative;
  cursor: pointer;
  border: double 4px transparent;
  background-image:
    linear-gradient(#212121, #212121),
    linear-gradient(137.48deg, #ffdb3b 10%, #ff9b17d7 45%, #f9ff41 67%, #feb200d7 87%);
  background-origin: border-box;
  background-clip: content-box, border-box;
  animation: gradient_anim 5s ease infinite;

  span {
    z-index: 2;
    letter-spacing: 3px;
    color: #ffffff;
    text-shadow: 0 0 4px rgb(0, 0, 0);
  }

  .container-stars {
    position: absolute;
    z-index: -1;
    width: 100%;
    height: 100%;
    overflow: hidden;
    transition: 0.5s;
    backdrop-filter: blur(1rem);
    border-radius: inherit;
  }

  .glow {
    position: absolute;
    display: flex;
    width: 12rem;

    .circle {
      width: 100%;
      height: 30px;
      filter: blur($circle-blur);
      animation: pulse_anim 4s infinite;
      z-index: -1;
      background: rgba(color.channel($border-color, "red"),
          color.channel($border-color, "green"),
          color.channel($border-color, "blue"),
          $glow-opacity );
      box-shadow: $circle-shadow;
    }
  }

  .stars {
    position: relative;
    background: transparent;
    width: 200rem;
    height: 200rem;

    &::after {
      content: "";
      position: absolute;
      top: -10rem;
      left: -100rem;
      width: 100%;
      height: 100%;
      background-image: radial-gradient(#ffffff 1px, transparent 1%);
      background-size: 50px 50px;
      animation: star_rotate 90s linear infinite;
    }

    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: -50%;
      width: 170%;
      height: 500%;
      background-image: radial-gradient(#ffffff 1px, transparent 1%);
      background-size: 50px 50px;
      opacity: 0.5;
      animation: star_fall 60s linear infinite;
    }
  }

  @media (hover: hover) {
    &:hover {
      transform: scale(1.1);

      .container-stars {
        z-index: 1;
        background-color: #212121;
      }

      border: double 4px $border-color;
      box-shadow: none;
    }
  }

  &:active {
    border-color: #FE53BB;
    animation: none;

    .circle {
      background: #FE53BB;
    }
  }

  // üîÅ Keyframes ÿØÿßÿÆŸÑ mixin
  @keyframes gradient_anim {
    0% {
      background-position: 0% 50%;
    }

    50% {
      background-position: 100% 50%;
    }

    100% {
      background-position: 0% 50%;
    }
  }

  @keyframes pulse_anim {
    0% {
      transform: scale(0.75);
      box-shadow: 0 0 0 0 rgba(0, 0, 0, 0.05);
    }

    70% {
      transform: scale(1);
      box-shadow: 0 0 0 10px rgba(0, 0, 0, 0);
    }

    100% {
      transform: scale(0.75);
      box-shadow: 0 0 0 0 rgba(0, 0, 0, 0);
    }
  }

  @keyframes star_fall {
    from {
      transform: translateY(0);
    }

    to {
      transform: translateY(-135rem);
    }
  }

  @keyframes star_rotate {
    from {
      transform: rotate(360deg);
    }

    to {
      transform: rotate(0);
    }
  }
}

@mixin neonGlowBtn($primary-color, $bg-color, $text-normal, $text-hover) {
  $glow-color: $primary-color;
  $spread-color: rgba(color.channel($glow-color, "red"),
      color.channel($glow-color, "green"),
      color.channel($glow-color, "blue"),
      0.45);

  border: 0.01rem solid $glow-color;
  background-color: $bg-color;
  color: $text-normal;
  position: relative;
  outline: none;
  transition: all 0.3s ease-in-out;
  text-shadow: 0 0 0.15em $glow-color;
  box-shadow:
    0 0 0.25rem 0.1rem $glow-color,
    0 0 1rem 0.4rem $spread-color,
    inset 0 0 0.2rem 0.08em $glow-color;

  @media (hover: hover) {
    &:hover {
      background-color: $glow-color;
      color: $text-hover;
      box-shadow:
        0 0 0.2em 0.08em $glow-color,
        0 0 1.2em 0.35em $spread-color,
        inset 0 0 0.2em 0.08em $glow-color;
    }
  }

  &:active {
    box-shadow:
      0 0 0.15em 0.06em $glow-color,
      0 0 1em 0.3em $spread-color,
      inset 0 0 0.15em 0.06em $glow-color;
  }
}

@mixin goldenButton() {
  touch-action: manipulation;
  display: inline-block;
  box-sizing: border-box;
  outline: none;
  border: 1px solid #a55d07;
  text-transform: uppercase;
  cursor: pointer;
  transition: all 0.2s ease-in-out;
  background-size: 100% 100%;
  background-position: center;
  background-image: linear-gradient(160deg,
      #a54e07,
      #b47e11,
      #fef1a2,
      #bc881b,
      #a54e07);
  box-shadow:
    0 3px 6px rgba(0, 0, 0, 0.16),
    0 3px 6px rgba(110, 80, 20, 0.4),
    inset 0 -2px 5px 1px rgba(139, 66, 8, 1),
    inset 0 -1px 1px 3px rgba(250, 227, 133, 1);
  color: rgb(120, 50, 5);
  text-shadow: 0 2px 2px rgba(250, 227, 133, 1);

  @media (hover: hover) {

    &:hover,
    &:focus {
      background-size: 150% 150%;
      box-shadow:
        0 10px 20px rgba(0, 0, 0, 0.19),
        0 6px 6px rgba(0, 0, 0, 0.23),
        inset 0 -2px 5px 1px #b17d10,
        inset 0 -1px 1px 3px rgba(250, 227, 133, 1);
      border: 1px solid rgba(165, 93, 7, 0.6);
      color: rgba(120, 50, 5, 0.8);
    }
  }

  &:active {
    box-shadow:
      0 3px 6px rgba(0, 0, 0, 0.16),
      0 3px 6px rgba(110, 80, 20, 0.4),
      inset 0 -2px 5px 1px #b17d10,
      inset 0 -1px 1px 3px rgba(250, 227, 133, 1);
  }
}

@mixin shadowButton($color) {
  color: #fff;
  background-color: $color;
  border: none;
  text-transform: uppercase;
  font-weight: 700;
  letter-spacing: 4px;
  transition: box-shadow 0.5s ease;

  box-shadow:
    0 0 8px $color;

  @media (hover: hover) {
    &:hover {
      box-shadow:
        0 0 4px $color,
        0 0 12px $color,
        0 0 18px $color;
    }
  }

  &:active {
    box-shadow:
      0 0 4px $color,
      0 0 10px $color;
    opacity: 0.7;
  }
}

@mixin subscribeButton($width, $height, $radius) {
  border: none;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  overflow: hidden;
  color: #ffd277;
  width: $width;
  height: $height;
  border-radius: $radius;
  background: linear-gradient(to right, #77530a, #ffd277, #77530a, #77530a, #ffd277, #77530a);
  background-size: 250%;
  background-position: left;
  transition-duration: 1s;

  &::before {
    content: "SUBSCRIBE";
    position: absolute;
    color: #ffd277;
    display: flex;
    align-items: center;
    justify-content: center;
    width: calc(#{$width} * 0.97);
    height: calc(#{$height} * 0.9);
    border-radius: $radius;
    background-color: rgba(0, 0, 0, 0.842);
    background-size: 200%;
    transition-duration: 1s;
  }

  @media (hover: hover) {
    &:hover {
      background-position: right;
    }

    &:hover::before {
      background-position: right;
    }
  }

  &:active {
    transform: scale(0.95);
  }
}

@mixin flatNeonButton($base-color, $text-color) {
  $border-color: $base-color;
  $shadow-color: rgba(color.channel($base-color, "red"),
      color.channel($base-color, "green"),
      color.channel($base-color, "blue"),
      0.6);

  border: 2px solid $border-color;
  background-color: transparent;
  color: $text-color;
  cursor: pointer;
  font-weight: 600;
  text-transform: uppercase;
  transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
  box-shadow: 0 0 6px $shadow-color;

  // ŸÅŸÇÿ∑ ÿ±Ÿà€å ÿØÿ≥ÿ™⁄ØÿßŸá‚ÄåŸáÿß€å hoverŸæÿ∞€åÿ±
  @media (hover: hover) {
    &:hover {
      border-color: $border-color;
      box-shadow:
        0 0 3px $shadow-color,
        0 0 12px $shadow-color;
    }
  }

  &:active {
    box-shadow: 0 0 4px rgba(color.channel($base-color, "red"),
        color.channel($base-color, "green"),
        color.channel($base-color, "blue"),
        0.4);
  }
}

@mixin animatedBorderBtn($width, $height, $main) {
  $shade: color.adjust($main, $lightness: -8%);
  $highlight: color.adjust($main, $lightness: 25%);
  $glow: rgba(color.channel($highlight, "red"),
      color.channel($highlight, "green"),
      color.channel($highlight, "blue"),
      0.3);

  $gradLeft: linear-gradient(to left, transparent, $highlight);
  $gradTop: linear-gradient(to top, transparent, $highlight);
  $gradRight: linear-gradient(to right, transparent, $highlight);
  $gradBottom: linear-gradient(to bottom, transparent, $highlight);

  display: inline-block;
  position: relative;
  width: $width;
  height: $height;
  overflow: hidden;
  background: linear-gradient(-30deg, $main 50%, $shade 50%);
  box-shadow: 0 20px 50px rgba(0, 0, 0, 0.5);
  text-decoration: none;
  transition: all 0.2s ease-in-out;

  &::before {
    content: '';
    position: absolute;
    inset: 0;
    background-color: $glow;
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
    z-index: 1;
  }

  @media (hover: hover) {
    &:hover::before {
      opacity: 0.2;
    }
  }

  span {
    position: absolute;
    z-index: 2;

    &:nth-child(1) {
      top: 0;
      left: 0;
      width: 100%;
      height: 2px;
      background: $gradLeft;
      animation: animateTop 2s linear infinite;
    }

    &:nth-child(2) {
      top: 0;
      right: 0;
      height: 100%;
      width: 2px;
      background: $gradTop;
      animation: animateRight 2s linear -1s infinite;
    }

    &:nth-child(3) {
      bottom: 0;
      left: 0;
      width: 100%;
      height: 2px;
      background: $gradRight;
      animation: animateBottom 2s linear infinite;
    }

    &:nth-child(4) {
      top: 0;
      left: 0;
      height: 100%;
      width: 2px;
      background: $gradBottom;
      animation: animateLeft 2s linear -1s infinite;
    }
  }

  div {
    position: relative;
    z-index: 3;
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5em;

    i,
    strong {
      display: inline-block;
    }
  }

  // üîÅ ÿßŸÜ€åŸÖ€åÿ¥ŸÜ‚ÄåŸáÿß
  @keyframes animateTop {
    0% {
      transform: translateX(100%);
    }

    100% {
      transform: translateX(-100%);
    }
  }

  @keyframes animateRight {
    0% {
      transform: translateY(100%);
    }

    100% {
      transform: translateY(-100%);
    }
  }

  @keyframes animateBottom {
    0% {
      transform: translateX(-100%);
    }

    100% {
      transform: translateX(100%);
    }
  }

  @keyframes animateLeft {
    0% {
      transform: translateY(-100%);
    }

    100% {
      transform: translateY(100%);
    }
  }
}

@mixin simple-button($base-color) {
  background-color: $base-color;

  @media (hover: hover) {
    &:hover {
      opacity: 0.8;
    }

    &:active {
      opacity: 0.5;
    }
  }
}

@mixin glassMorphBtn($text-color: #ffffffcc) {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.5em;
  border: none;
  background: linear-gradient(
    -75deg,
    rgba(255, 255, 255, 0.04),
    rgba(255, 255, 255, 0.15),
    rgba(255, 255, 255, 0.04)
  );
  box-shadow:
    inset 0 0.125em 0.125em rgba(0, 0, 0, 0.05),
    inset 0 -0.125em 0.125em rgba(255, 255, 255, 0.3),
    0 0.25em 0.125em -0.125em rgba(0, 0, 0, 0.2),
    0 0 0.1em 0.25em inset rgba(255, 255, 255, 0.12);
  backdrop-filter: blur(6px);
  -webkit-backdrop-filter: blur(6px);
  transition: all 0.4s ease-in-out;
  overflow: hidden;
  color: $text-color;

  // Outline pseudo-layer
  &::after {
    content: '';
    position: absolute;
    inset: 0;
    pointer-events: none;
    background: conic-gradient(
        from var(--angle, -75deg),
        rgba(255, 255, 255, 0.25),
        rgba(255, 255, 255, 0) 5% 40%,
        rgba(255, 255, 255, 0.25) 50%,
        rgba(255, 255, 255, 0) 60% 95%,
        rgba(255, 255, 255, 0.25)
      ),
      linear-gradient(180deg, rgba(255,255,255,0.2), rgba(255,255,255,0.2));
    mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
    mask-composite: exclude;
    box-shadow: inset 0 0 0 1px rgba(255,255,255,0.3);
    z-index: 1;
    transition: all 0.4s ease-in-out;
  }

  @property --angle {
    syntax: "<angle>";
    inherits: false;
    initial-value: -75deg;
  }

  @media (hover: hover) {
    &:hover {
      transform: scale(0.98);
      backdrop-filter: blur(1em);
      -webkit-backdrop-filter: blur(1em);
      &::after {
        --angle: -125deg;
      }
    }
  }

  &:active {
    transform: scale(0.96);
    &::after {
      --angle: -45deg;
    }
  }
}


